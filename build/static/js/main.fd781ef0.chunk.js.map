{"version":3,"sources":["App/components/Title/Title.module.scss","App/components/Edition/Edition.module.scss","App/components/MainView/MainView.module.scss","App/components/Button/Button.js","App/components/Title/Title.js","App/components/Navbar/Navbar.js","App/components/Viewer/Viewer.js","App/components/Edition/Edition.js","App/components/Footer/Footer.js","App/components/MainView/MainView.js","App/App.js","reportWebVitals.js","index.js"],"names":["module","exports","Button","props","useState","clicked","setclicked","className","style","backgroundColor","color","onClick","setTimeout","text","defaultProps","alert","Title","styles","data-testid","orange","endTitle","Navbar","role","type","data-toggle","data-target","href","placeholder","Viewer","JSON","stringify","meme","img","url","viewBox","w","h","xlinkHref","x","y","Edition","imgs","setimgs","useEffect","fetch","REST_SRV_ADR","then","f","json","o","textAlign","value","imgId","onChange","evt","idImageSelected","Number","target","imgFound","find","elementImage","id","onChangeMeme","map","elem","index","coord","min","step","componentName","MainView","console","log","children","initialState","App","componentDidMount","setState","memes","state","this","memeiN","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd781ef0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Title_Title__a3Xox\",\"endTitle\":\"Title_endTitle__38UPe\",\"orange\":\"Title_orange__1gsc8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"coord\":\"Edition_coord__3vzyw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainView\":\"MainView_MainView__IUSV-\"};","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Button.css'\r\n\r\nfunction Button(props) {\r\n    //console.log(props);\r\n    const [clicked, setclicked] = useState();\r\n    <Button text=\"Voici le corps du bouton\" backgroundColor=\"green\" color=\"white\" />\r\n    return <div className={'Button'+((clicked)?' clicked':'')} style={{ backgroundColor: props.backgroundColor, color: props.color }} onClick={\r\n        ()=> {\r\n            setclicked(true);\r\n            setTimeout(()=>{setclicked(false)},500)\r\n            props.onClick();\r\n        }\r\n    }>\r\n    {props.text}</div>\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    backgroundColor: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func\r\n}\r\n\r\nButton.defaultProps={\r\n    backgroundColor:\"tomato\",\r\n    color:\"white\",\r\n    onClick:() => {alert('ne plus cliquer ici')}\r\n}\r\n\r\nexport default Button\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Title.module.scss';\n\nconst Title = () => (\n  <div className={styles.Title} data-testid=\"Title\">\n    Meme\n    <span className={styles.orange}>.</span>\n    <span className={styles.endTitle}>generator</span>\n  </div>\n);\n\nTitle.propTypes = {};\n\nTitle.defaultProps = {};\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Navbar.module.scss';\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.css'\n\nconst Navbar = () => (\n  <div className={styles.Navbar} data-testid=\"Navbar\">\n\n    <nav className=\"navbar navbar-default\" role=\"navigation\">\n        <div className=\"navbar-header\">\n            <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-ex1-collapse\">\n              <span className=\"sr-only\">Toggle navigation</span>\n              <span className=\"icon-bar\"></span>\n              <span className=\"icon-bar\"></span>\n              <span className=\"icon-bar\"></span>\n            </button>\n            <a className=\"navbar-brand\" href=\"#\">Title</a>\n          </div>\n\n        <div className=\"collapse navbar-collapse navbar-ex1-collapse\">\n            <ul className=\"nav navbar-nav\">\n              <li className=\"active\"><a href=\"#\">Link</a></li>\n              <li><a href=\"#\">Link</a></li>\n            </ul>\n            <form className=\"navbar-form navbar-left\" role=\"search\">\n              <div className=\"form-group\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"Search\"/>\n                </div>\n                <button type=\"submit\" className=\"btn btn-default\">Submit</button>\n            </form>\n              <ul className=\"nav navbar-nav navbar-right\">\n                <li><a href=\"#\">Link</a></li>\n                <li className=\"dropdown\">\n                  <a href=\"#\" className=\"dropdown-toggle\" data-toggle=\"dropdown\">Dropdown <b className=\"caret\"></b></a>\n                  <ul className=\"dropdown-menu\">\n                    <li><a href=\"#\">Action</a></li>\n                    <li><a href=\"#\">Another action</a></li>\n                    <li><a href=\"#\">Something else here</a></li>\n                    <li><a href=\"#\">Separated link</a></li>\n                  </ul>\n                </li>\n              </ul>\n        </div>\n    </nav>\n\n  </div>\n    );\n    \nNavbar.propTypes = {};\n    \nNavbar.defaultProps = {};\n    \n    export default Navbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Viewer.module.scss';\n\nconst Viewer = (props) => (\n  <div className={styles.Viewer} data-testid=\"Viewer\">\n    {JSON.stringify(props.meme)}{`/img/${props.meme.img.url}`}\n    <svg viewBox={`0 0 ${props.meme.img.w} ${props.meme.img.h}`}>\n      <image xlinkHref={`/img/${props.meme.img.url}`} x={0} y={0}/>\n    </svg>\n  </div>\n);\n\nViewer.propTypes = {\n  meme:PropTypes.object.isRequired\n};\n\nViewer.defaultProps = {};\n\nexport default Viewer;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes, { element, object } from 'prop-types';\nimport styles from './Edition.module.scss';\nimport Button from '../Button/Button';\n\nconst REST_SRV_ADR='http://localhost:5644';\n\nconst Edition = (props) => {\n\n  const [imgs, setimgs] = useState([]);\n\n  useEffect(() => {\n    \n      fetch(REST_SRV_ADR + '/imgs').then(f=>f.json()).then(o=>setimgs(o))\n    \n  }, [1])\n\n  return (\n  <div className={styles.Edition} data-testid=\"Edition\">\n  {JSON.stringify(imgs)}\n    <div style={{ textAlign: 'center' }}>Image :<br />\n      <select value={props.meme.imgId} onChange={(evt)=>{\n        const idImageSelected = Number(evt.target.value);\n        const imgFound = imgs.find((elementImage)=>elementImage.id===idImageSelected);\n        props.onChangeMeme({...props.meme, imgId:idImageSelected, img:imgFound})\n        \n        }}>\n        {imgs.map((elem,index)=>{\n          return <option value={elem.id} key={`img-${index}`}>{elem.url}</option>\n        })}\n      </select>\n    </div>\n\n    <div style={{ textAlign: 'center' }}>\n      Coordonnées<br />\n      <div className={styles.coord} >\n       x<br />\n        <input type=\"number\" min=\"0\" step=\"1\" value={props.meme.text.x} onChange={evt=>{\n        props.onChangeMeme({...props.meme, text:{...props.meme.text, x:Number(evt.target.value) }})\n        \n        }}/>\n      </div>\n\n      <div className={styles.coord}>\n      y: <br />\n        <input type=\"number\" min=\"0\" step=\"1\" value={props.meme.text.y} onChange={evt=>{\n        props.onChangeMeme({...props.meme, text:{...props.meme.text, y:Number(evt.target.value) }})\n        \n        }}/>\n      </div>\n\n    </div>\n    <div className=\"text\" style={{ textAlign: 'center' }}>\n      text :\n    <textarea className=\"blabla\" value={props.meme.value}  onChange={evt=>{\n        props.onChangeMeme({...props.meme, text:{...props.meme.text, value:evt.target.value }})\n        \n        }}></textarea>\n    </div>\n    <hr />\n    <div style={{ textAlign: 'center' }}>\n      Text :<br />\n      <textarea></textarea>\n    </div>\n    <div style={{ textAlign: 'center' }}>\n      <Button text=\"Reset\" backgroundColor=\"tomato\"></Button>\n      <Button text=\"Save\" backgroundColor=\"skyblue\"></Button>\n    </div>\n  </div>\n)};\n\nEdition.propTypes = {\n  meme:PropTypes.object.isRequired,\n  onChangeMeme:PropTypes.func.isRequired\n};\n\nEdition.defaultProps = {\n  onChangeMeme:()=>{}\n};\n\nexport default Edition;\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nexport default function componentName() {\r\n  return (\r\n    <div>\r\n    Infotel 2020\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './MainView.module.scss';\n\nconst MainView = (props) => {\n  console.log(props);\n  return(\n  <div className={styles.MainView} data-testid=\"MainView\">\n    {props.children}\n  </div>\n );}\n\nMainView.propTypes = {};\n\nMainView.defaultProps = {};\n\nexport default MainView;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport MyButton from './components/Button/Button';\nimport Title from './components/Title/Title';\nimport Navbar from './components/Navbar/Navbar';\nimport Viewer from './components/Viewer/Viewer';\nimport Edition from './components/Edition/Edition';\nimport Footer from './components/Footer/Footer';\nimport MainView from './components/MainView/MainView';\nimport { Button as Button2 } from 'react-bootstrap';\n// import {REST_SRV_ADR} from './config/config';\n\nconst REST_SRV_ADR = 'http://localhost:5644';\n\nconst initialState = {\n  meme: {\n    imgId: 3,img :{ id: 3, url: \"biere.jpg\", w: 512, h: 512 },\n    text: { x: 20, y: 50, value: 'DEMAT BREIZH' },\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  componentDidMount = () => {\n    fetch(REST_SRV_ADR + '/memes').then(f => f.json()).then(o => this.setState({ memes: o }))\n  }\n\n  render() {\n    return (\n      <>\n        {JSON.stringify(this.state)}\n        <Button2 text=\"Ne pas cliquer!!\" onClick={\n          () => {\n            this.setState({\n              meme: {\n                ...this.state.meme, //anciennes valeurs car plusieurs niveaux de profondeur \n                text: {\n                  ...this.state.meme.text, //anciennes valeurs car plusieurs niveaux de profondeur \n                  value: 'Hello'\n                }\n              }\n            })\n          }\n        }>\n\n        </Button2>\n        <div className=\"App\">\n\n          <Title></Title>\n          <Navbar></Navbar>\n          <MainView>\n            <Viewer meme={this.state.meme}></Viewer>\n            <Edition meme={this.state.meme} onChangeMeme={\n              \n              (memeiN) => { this.setState({ meme: memeiN }) }\n              \n              }\n              ></Edition>\n          </MainView>\n          <Footer></Footer>\n        </div>\n      </>\n    );\n  }\n}\n\n\nApp.propTypes = {\n\n};\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}